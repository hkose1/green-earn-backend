global:
  environment: production
  acrLoginServer: ${{ secrets.ACR_LOGIN_SERVER }}

apiGateway:
  name: api-gateway
  replicaCount: 1
  image:
    repository: ${{ secrets.ACR_LOGIN_SERVER }}/green-earn-api-gateway
    tag: latest
  service:
    type: LoadBalancer
    port: 8000
  resources:
    limits:
      cpu: 1000m
      memory: 1024Mi
    requests:
      cpu: 500m
      memory: 512Mi

eventBus:
  name: event-bus
  replicaCount: 1
  image:
    repository: ${{ secrets.ACR_LOGIN_SERVER }}/green-earn-event-bus
    tag: latest
  service:
    port: 5672
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi

serviceRegistry:
  name: service-registry
  replicaCount: 1
  image:
    repository: ${{ secrets.ACR_LOGIN_SERVER }}/green-earn-service-registry
    tag: latest
  service:
    port: 8500
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi

# Mikroservisler
authService:
  name: auth-service
  replicaCount: 1
  image:
    repository: ${{ secrets.ACR_LOGIN_SERVER }}/green-earn-auth-service
    tag: latest
  service:
    port: 8081
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi
  env:
    SPRING_DATASOURCE_HOST: ${{ secrets.AZURE_POSTGRES_HOST }}
    SPRING_DATASOURCE_PORT: "5432"
    SPRING_DATASOURCE_DATABASE: ${{ secrets.AZURE_POSTGRES_DATABASE }}
    SPRING_DATASOURCE_USERNAME: ${{ secrets.AZURE_POSTGRES_USERNAME }}
    SPRING_DATASOURCE_PASSWORD: ${{ secrets.AZURE_POSTGRES_PASSWORD }}
    SPRING_JPA_HIBERNATE_DDL_AUTO: update
    SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
  livenessProbe:
    httpGet:
      path: /actuator/health
      port: 8081
    initialDelaySeconds: 60
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /actuator/health
      port: 8081
    initialDelaySeconds: 30
    periodSeconds: 10

mailService:
  name: mail-service
  replicaCount: 1
  image:
    repository: ${{ secrets.ACR_LOGIN_SERVER }}/green-earn-mail-service
    tag: latest
  service:
    port: 8082
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi

customerService:
  name: customer-service
  replicaCount: 1
  image:
    repository: ${{ secrets.ACR_LOGIN_SERVER }}/green-earn-customer-service
    tag: latest
  service:
    port: 8083
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi
  env:
    SPRING_DATASOURCE_HOST: ${{ secrets.AZURE_POSTGRES_HOST }}
    SPRING_DATASOURCE_PORT: "5432"
    SPRING_DATASOURCE_CUSTOMER_SERVICE_DATABASE: ${{ secrets.AZURE_POSTGRES_CUSTOMER_SERVICE_DATABASE }}
    SPRING_DATASOURCE_USERNAME: ${{ secrets.AZURE_POSTGRES_USERNAME }}
    SPRING_DATASOURCE_PASSWORD: ${{ secrets.AZURE_POSTGRES_PASSWORD }}
    SPRING_JPA_HIBERNATE_DDL_AUTO: update
    SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
  livenessProbe:
    httpGet:
      path: /actuator/health
      port: 8083  
    initialDelaySeconds: 60
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /actuator/health
      port: 8083
    initialDelaySeconds: 30
    periodSeconds: 10

rewardService:
  name: reward-service
  replicaCount: 1
  image:
    repository: ${{ secrets.ACR_LOGIN_SERVER }}/green-earn-reward-service
    tag: latest
  service:
    port: 8084
  resources:
    limits:
      cpu: 1000m
      memory: 1024Mi
    requests:
      cpu: 500m
      memory: 512Mi
  env:
    SPRING_DATASOURCE_HOST: ${{ secrets.AZURE_POSTGRES_HOST }}
    SPRING_DATASOURCE_PORT: "5432"
    SPRING_DATASOURCE_REWARD_SERVICE_DATABASE: ${{ secrets.AZURE_POSTGRES_REWARD_SERVICE_DATABASE }}
    SPRING_DATASOURCE_USERNAME: ${{ secrets.AZURE_POSTGRES_USERNAME }}
    SPRING_DATASOURCE_PASSWORD: ${{ secrets.AZURE_POSTGRES_PASSWORD }}
    SPRING_JPA_HIBERNATE_DDL_AUTO: update
    SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
  livenessProbe:
    httpGet:
      path: /actuator/health
      port: 8084
    initialDelaySeconds: 60
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /actuator/health
      port: 8084
    initialDelaySeconds: 30
    periodSeconds: 10

elasticsearch:
  enabled: true
  name: elasticsearch
  replicaCount: 1
  image:
    repository: docker.elastic.co/elasticsearch/elasticsearch
    tag: 7.17.0
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi

monitoring:
  enabled: true
  prometheus:
    enabled: true
  grafana:
    enabled: true
    adminPassword: admin 